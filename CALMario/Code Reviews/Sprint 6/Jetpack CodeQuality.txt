Author of the code review: 
Melinda Studans

Date of the code review: 
July 27th, 2017

Sprint number: 
6

Name of the .cs file being reviewed: 
Jetpack.cs

Author of the .cs file being reviewed: 
Adam Chen

Number of minutes taken to complete the review:
15 minutes

Specific comments on code quality:
Overall, the quality of the Jetpack class is very good since it is following the structure and conventions
being followed in the other items classes. This class is extending the ItemKernel class which reduces 
the amount of things that need to be added to the class. The only distinctions that this class needed to
make was the sprite that is being used for the jetpack and the StateMachine's method that is being called
when the item is collected. 

A hypothetical change to make to the game related to file being reviewed and how the current 
implementation could or could not easily support that change:
Suppose that we wanted to change the effect that the jetpack had on Mario's movement (ex. increase 
Mario's horizontal acceleration in addition to its vertical acceleration). This change would have
no effect on the Jetpack class since the CollectedBy() method is relying on the StateMachine class
(which is relying on the PhysicsData class). If we wanted to change the jetpack's y acceleration
impact, we would just need to alter JetpackThrust in the PhysicsData class. If we wanted to change the 
jetpack's x acceleration impact, we would simply need to add a new variable to the PhysicsData class
and add this value to the Update method in the StateMachine class. 
